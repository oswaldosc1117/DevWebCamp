@use 'variables' as v;

/** Media Queries **/
@mixin telefono {
    @media (min-width: v.$telefono) {
        @content;
    }
}
@mixin tablet {
    @media (min-width: v.$tablet) {
        @content;
    }
}
@mixin desktop {
    @media (min-width: v.$desktop) {
        @content;
    }
}
@mixin xl_desktop {
    @media (min-width: v.$xl_desktop) {
        @content;
    }
}

@mixin boton($bgColor, $colorTexto) {
    background-color: $bgColor;
    padding: 1.5rem 4rem;
    color: $colorTexto;
    font-size: 1.8rem;
    font-weight: 700;
    border: none;
    border-radius: 1rem;
    transition-property: background-color;
    transition-duration: .3s;
    text-align: center;
    width: 100%;
    display: inline-block;

    &:hover {
        background-color: darken( $bgColor, 10% );
        cursor: pointer;
    }
}

@mixin grid($columnas, $espaciado ) {
    display: grid;
    gap: $espaciado;
    grid-template-columns: repeat($columnas, 1fr);
}

@mixin contenedor {
    width: min(95%, 140rem);
    margin: 0 auto;
}

@mixin contenedor-md {
    width: min(95%, 80rem);
    margin: 0 auto;
}

@mixin contenedor-sm {
    width: min(95%, 60rem);
    margin: 0 auto;
}

@mixin headings {
    font-family: v.$fuente-principal;
    font-weight: v.$black;
    margin: 2rem 0;
}

@mixin nombre-pagina {
    @include headings;
    margin: 6rem 0 3rem 0;
    text-align: center; 
}

@mixin descripcion-pagina{
    text-align: center;
    font-size: 1.8rem;
    font-weight: v.$delgada;
    color: v.$gris-oscuro;
    margin-bottom: 5rem;
}

@mixin texto-fluido($min, $max) {
    font-size: clamp($min, -0.8rem + 10vw, $max); // NG - 1.
}

@mixin texto-degradado($inicial, $final) {
    background: linear-gradient(to right, $inicial, $final);
    background-clip: text; // NG - 2.
    color: transparent;
}

@mixin logo{
    color: v.$blanco;
    text-align: center;
    margin-bottom: 2rem;
    white-space: nowrap;
    @include desktop{
        text-align: left;
        margin: 0;
    }
}

@mixin menu-redes($color, $size){
    &__enlace{

        &::before{
            color: $color;
            font-size: $size;
            display: inline-block;
            font-style: normal;
            text-rendering: auto; // NG - 3.
            -webkit-font-smoothing: antialiased; // NG - 4.
            font-family: "Font Awesome 6 Brands";
        }

        &[href*="https://facebook.com"]::before {
            content: "\f39e";
        }
        &[href*="https://github.com"]::before {
            content: "\f09b";
        }
        
        &[href*="https://tiktok.com"]::before {
            content: "\e07b";
        }
        &[href*="https://instagram.com"]::before {
            content: "\f16d";
        }
        &[href*="https://youtube.com"]::before {
            content: "\f167";
        }
        &[href*="https://twitter.com"]::before {
            content: "\f099";
        }
    }

    &__ocultar{
        display: none;
    }
}

@mixin enlace{
    all: unset;
    color: v.$blanco;
    font-size: 1.4rem;
    font-weight: v.$bold;
    text-transform: uppercase;
    transition: all .3s ease-in-out;

    &:hover{
        color: v.$azul;
        cursor: pointer;
    }
}

@mixin shadow{
    box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px, rgba(0, 0, 0, 0.22) 0px 10px 10px;;
}

@mixin reset-lista{
    padding: 0;
    margin: 0;
    list-style: none;
}

@mixin tags{
    @include reset-lista;
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    margin-top: 1.5rem;



    > li{
        background-color: v.$azul;
        color: v.$blanco;
        padding: 1rem;
        border-radius: 1rem;
        font-size: 1.5rem;
        font-weight: v.$bold;
    }
}

@mixin card{
    border: 1px solid v.$gris-oscuro;
    border-radius: 1rem;
    padding: 3rem;
    display: flex;
    justify-content: space-between;
    flex-direction: column;

    &__nombre{
        font-weight: v.$black;
        font-size: 2.6rem;
        margin: 2rem 0;
    }
}

@mixin bg-gradient($bg-color){
    background-image: linear-gradient(to left top, $bg-color, lighten($bg-color, 30%));
}


/* NOTAS GENERALES

1.- La función CSS clamp() fija un valor medio dentro de un rango de valores entre un límite mínimo definido y un límite máximo. La función toma tres
parámetros: un valor mínimo, un valor preferido y un valor máximo permitido. Para fines del ejercicio donde clamp() se aplica a una fuente (h1), se establece
un tamaño de fuente que crece con el tamaño de la ventana gráfica, pero no baja de un tamaño de fuente mínimo ni supera un tamaño de fuente máximo.

2.- La propiedad background-clip especifica si el fondo de un elemento, ya sea el color o imagen, se extiende por debajo su borde. Si la imagen o color de fondo
no esta definido, esta propiedad solo tendrá un efecto visual cuando el borde tenga regiones transparentes o regiones parcialmente opacas (debido a border-style
o border-image); de lo contrario el borde cubre la diferencia.

3.- La propiedad CSS image-rendering provee una sugerencia al navegador acerca del algoritmo que debe usar para escalar imágenes.

4.- La propiedad CSS font-smooth controla la aplicación de suavizado cuando se representan las fuentes. Por su parte, el parametro "antialiased" Suaviza la fuente
al nivel del píxel, en lugar del nivel del subpíxel. Cambiar de renderizado de subpíxeles a suavizado para texto claro sobre fondos oscuros hace que parezca más
claro. Es importante que esta propiedad no es estandar. Para mas informacion, revisar el video 686 del curso de Desarrollo Web Completo del profesor Juan de la
Torre Valdez.
*/